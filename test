// Create a scene
var scene = new THREE.Scene();

// Create a camera
var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
camera.position.z = 5;

// Create a renderer
var renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

// Create an array of image URLs
var imageUrls = [
  "url1.jpg",
  "url2.jpg",
  // ... add more URLs here
];

// Calculate the number of cubes based on the number of images
var numCubes = imageUrls.length;
var numCubesPerRow = Math.ceil(Math.sqrt(numCubes));

// Calculate the size of each cube based on the number of cubes per row
var cubeSize = 2 / numCubesPerRow;

// Create cubes with dynamically loaded textures
for (var i = 0; i < numCubes; i++) {
  var cubeGeometry = new THREE.BoxGeometry(cubeSize, cubeSize, cubeSize);

  // Load image texture dynamically from URL
  var loader = new THREE.TextureLoader();
  loader.load(imageUrls[i], function(texture) {
    var cubeMaterial = new THREE.MeshBasicMaterial({ map: texture });
    var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);

    // Calculate the position of each cube based on its index
    var row = Math.floor(i / numCubesPerRow);
    var col = i % numCubesPerRow;
    var xPos = (col - numCubesPerRow / 2) * cubeSize;
    var yPos = (row - numCubesPerRow / 2) * cubeSize;

    cube.position.set(xPos, yPos, 0);
    scene.add(cube);
  });
}

// Render the scene
function animate() {
  requestAnimationFrame(animate);
  renderer.render(scene, camera);
}
animate();
